name: CI
on:
  push:
    branches:
      - master
    tags: ['*']
    paths:
      - '**.toml'
      - '**.jl'
      - 'docs/*'
  pull_request:
    paths:
      - '**.toml'
      - '**.jl'
      - 'docs/*'
concurrency:
  # Skip intermediate builds: always.
  # Cancel intermediate builds: only if it is a pull request build.
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ startsWith(github.ref, 'refs/pull/') }}
jobs:
  test:
    name: Julia ${{ matrix.version }} - ${{ matrix.os }} - ${{ matrix.arch }} - ${{ github.event_name }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        version:
          - '1.6'
          - '1.7'
          - '1.8'
          - '1.9'
          - 'nightly'
        os:
          - ubuntu-latest
        arch:
          - x64
    steps:
      - uses: actions/checkout@v2
      - uses: julia-actions/setup-julia@v1
        with:
          include-all-prereleases: true
          version: ${{ matrix.version }}
          arch: ${{ matrix.arch }}
          show-versioninfo: true
      - uses: julia-actions/cache@v1
        with:
          cache-name: CI - Julia ${{ matrix.version }} - ${{ matrix.os }} - ${{ matrix.arch }}
          cache-compiled: true
      - name: Add Julia registries
        run: |
          using Pkg
          pkg"registry add https://github.com/bsc-quantic/Registry"
          pkg"registry add General"
      - uses: julia-actions/julia-buildpkg@v1
      - uses: julia-actions/julia-runtest@v1
      - uses: julia-actions/julia-processcoverage@v1
      - uses: codecov/codecov-action@v2
        with:
          files: lcov.info
  # docs:
  #   name: Documentation
  #   runs-on: ubuntu-latest
  #   permissions:
  #     contents: write
  #   steps:
  #     - uses: actions/checkout@v2
  #     - uses: julia-actions/setup-julia@v1
  #       with:
  #         version: '1'
  #     - uses: julia-actions/julia-buildpkg@v1
  #     - uses: julia-actions/julia-docdeploy@v1
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #     - run: |
  #         julia --project=docs -e '
  #           using Documenter: DocMeta, doctest
  #           using EinExprs
  #           DocMeta.setdocmeta!(EinExprs, :DocTestSetup, :(using EinExprs); recursive=true)
  #           doctest(EinExprs)'
